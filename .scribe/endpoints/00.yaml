name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of the admin.'
        required: true
        example: admin@admin.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: Password.
        required: true
        example: admin@123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: admin@admin.com
      password: admin@123
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: Logout
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-mongo-sanctum-api/public/api/auth/logout could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/logout-from-all-device
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: 'Logout Of All Devices'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-mongo-sanctum-api/public/api/auth/logout-from-all-device could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vehicle/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Vehicle
      subgroupDescription: ''
      title: List
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-mongo-sanctum-api/public/api/vehicle/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vehicle/detail/{_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Vehicle
      subgroupDescription: ''
      title: Detail
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      _id:
        name: _id
        description: 'The ID of the .'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      _id: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-mongo-sanctum-api/public/api/vehicle/detail/autem could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vehicle/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Vehicle
      subgroupDescription: ''
      title: Create
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'Type of vehicle.'
        required: true
        example: '2wheeler,3wheeler,4wheeler,heavyduty'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'Brand of vehicle.'
        required: true
        example: Toyota
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      model:
        name: model
        description: 'Model of vehicle.'
        required: true
        example: Supra
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '2wheeler,3wheeler,4wheeler,heavyduty'
      brand: Toyota
      model: Supra
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
